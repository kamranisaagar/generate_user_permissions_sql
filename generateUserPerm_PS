param( 
    [Parameter(Mandatory=$true)] 
    [string]$hostname 
) 

while ($true) {
    $username = Read-Host -Prompt 'Input the username'

    $connectionString = "Server=$hostname;Database=master;Integrated Security=True;" 
    $connection = New-Object System.Data.SqlClient.SqlConnection($connectionString) 

    $command = $connection.CreateCommand() 
    $command.CommandText = "SELECT name FROM sys.databases WHERE name NOT IN ('master', 'tempdb', 'model', 'msdb');" 

    $databases = @() 

    try { 
        $connection.Open() 
        $reader = $command.ExecuteReader() 

        while ($reader.Read()) { 
            $databases += $reader["name"] 
        } 
    } finally { 
        $connection.Close() 
    } 

    foreach ($dbname in $databases) { 
        $connectionString = "Server=$hostname;Database=$dbname;Integrated Security=True;" 
        $connection = New-Object System.Data.SqlClient.SqlConnection($connectionString) 

        $command = $connection.CreateCommand() 

        $command.CommandText = @"
        DECLARE @UserName sysname = '$username'; 
        DECLARE @SQL nvarchar(max) = ''; 
        DECLARE @UserExists bit; 
        DECLARE @DatabaseName sysname = DB_NAME(); 

        SET @UserExists = 0; 
        SET @SQL = ''; 

        SET @SQL = 'SELECT @UserExists = 1    
                    FROM sys.database_principals    
                    WHERE name = ''' + @UserName + ''';';   

        EXEC sp_executesql @SQL, N'@UserExists bit OUTPUT', @UserExists = @UserExists OUTPUT; 

        IF @UserExists = 1   
        BEGIN   
            SET @SQL = ''; 

            SELECT   
                @SQL = @SQL + 'EXEC sp_addrolemember ''' + USER_NAME(rm.role_principal_id) + ''', ''' + @UserName + ''';' + CHAR(13)   
            FROM   
                sys.database_role_members rm   
            WHERE   
                rm.member_principal_id = USER_ID(@UserName);   

            SELECT   
                @SQL = @SQL + 'GRANT ' + dp.permission_name + ' ON ' + QUOTENAME(s.name) + '.' + QUOTENAME(o.name) + ' TO ' + QUOTENAME(@UserName) + ';' + CHAR(13)   
            FROM   
                sys.database_permissions dp   
                JOIN sys.objects o ON dp.major_id = o.object_id   
                JOIN sys.schemas s ON o.schema_id = s.schema_id   
            WHERE   
                dp.grantee_principal_id = USER_ID(@UserName)   
                AND dp.class = 1; 

            SELECT   
                @SQL = @SQL + 'GRANT ' + dp.permission_name + ' TO ' + QUOTENAME(@UserName) + ';' + CHAR(13)   
            FROM   
                sys.database_permissions dp   
            WHERE   
                dp.grantee_principal_id = USER_ID(@UserName)   
                AND dp.class = 0;   

            SELECT   
                @SQL = @SQL + 'GRANT ' + dp.permission_name + ' ON SCHEMA::' + QUOTENAME(s.name) + ' TO ' + QUOTENAME(@UserName) + ';' + CHAR(13)   
            FROM   
                sys.database_permissions dp   
                JOIN sys.schemas s ON dp.major_id = s.schema_id   
            WHERE   
                dp.grantee_principal_id = USER_ID(@UserName)   
                AND dp.class = 3; 

            SELECT @DatabaseName AS DatabaseName, @SQL AS Sql; 
        END 
"@

        try { 
            $connection.Open() 
            $reader = $command.ExecuteReader() 

            while ($reader.Read()) { 
                Write-Output "" 
                Write-Output "USE [$($reader["DatabaseName"])];" 
                $sql = $reader["Sql"] -split "\r" 
                foreach ($line in $sql) { 
                    Write-Output $line 
                } 
            } 
        } finally { 
            $connection.Close() 
        } 
    } 
}
